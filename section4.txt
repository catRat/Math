\section{谓词和量词}
\subsection{引言}
本节我们将介绍一种表达能力更强的逻辑，即谓词逻辑。我们将看到谓词逻辑如何用来表达数学和计算机科学中各种语句的意义，并允许我们推理和探索对象之间的关系。为了理解为此逻辑，我们首先需要介绍为此的概念。之后，我们将介绍量词的概念，它可以让我们对这样的语句进行推理：某一性质对于某一类型的所有对象均成立，存在一个对象使得某一特性成立。

\subsection{谓词}
在数学断言，计算机程序以及系统规格说明中经常可以看到含有变量的语句，比如
\[
“x > 3”, “x = y+3”,“x+y =z"
\]
和
\[
“计算机x被一名入侵者攻击"
\]
以及
\[
“计算机x在正常运行"
\]
当这些变量值为指定时，这些语句即不为真也不为假。本节我们将讨论从这种语句中生成命题的方式。

语句 "$x$大于3" 有两部分。第一部分即变量 $x$ 是语句的主语。第二部分表明语句的主语具有的一个性质。我们可以用 $P(x)$ 表示语句 “$x$ 大于3”，其中 $P$ 表示谓词 ''大于3'' ,而 $x$ 是变量。语句 $P(x)$ 也可以说成命题函数 $P$ 在 $x$ 的取值。一旦给变量 $x$ 赋一个值，语句 $P(x)$ 就称为命题并具有真值。

一般地,涉及 $n$ 个变量 $x_1,x_2, \cdots,x_n$ 的语句可以表示成
\[
P(x_1,x_2,\cdots,x_n)
\]
形式为 $P(x_1,x_2,\cdots,x_n)$ 的语句是命题函数 $P$ 在 $n$ 元祖 $(x_1,x_2,\cdots,x_n)$ 的值，$P$也称为$n$位谓词或$n$元谓词。
\subsection{量词}
当命题函数中的变量均被赋值时，所得到语句就变成举要真值的命题。可是，还有领完一种称为量化的重要方式也可以熊命题函数生成一个命题。量化表示在何种程度上谓词对于一定范围的个体成立。在自然语言中，所有、某些、许多、没有，以及少量这些词都可以用在量化上。这里我们集中讨论两类量化：全程量化，它告诉我们一个谓词在所考虑范围内对每一个个体都为真；存在量化，它告诉我们一个谓词对所考虑范围内的一个或多个个体为真。处理谓词和量词的逻辑领域称为谓词演算。

定义1  $P(x)$ 的全称量化是语句
\[
“P(x)对x在其论域的所有值为真”
\]
用 $\forall xP(x)$ 表示 $P(x)$ 的全程量化，其中 $\forall$ 称为全称量词。

定义2  $P(x)$ 的存在量化是命题
\[
“论域中存在一个个体x满足P(x)”
\]
我们用符号 $\exists xP(x)$ 表示 $P(x)$ 的存在量化，其中 $\exists$ 称为存在量词。

另一个重要的量词是唯一性量词。

\subsection{约束论域的量词}
在要限定一个量词的论域时经常采用简写的表示法。在这个表示法里，办理必须满足的条件直接放在量词的后面。

\subsection{量词的优先级}
量词 $\forall$ 和 $\exists$ 比命题演算中的所有逻辑运算符都具有更高的优先级。
\subsection{变量绑定}
当量词作用于变量 $x$ 时，我们所此变量的这次出现为约束的。一个变量的出现被称为 自由的，如果没有被量词约束或设置为等于某一特定值。
\subsection{涉及量词的逻辑等价式}
\subsection{量化表达式的否定}
\subsection{语句到逻辑表达式的翻译}
\subsection{系统规范说明中量词的使用}
\subsection{逻辑程序设计}
